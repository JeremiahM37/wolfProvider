name: tcpdump Tests

# Defines when the workflow runs: on pushes to specific branches or any pull request.
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

# Ensures only one workflow run for a given branch/PR at a time, cancelling older runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # This job builds wolfSSL, OpenSSL, and wolfProvider.
  # It assumes you have a separate reusable workflow for this, like your examples.
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
    strategy:
      matrix:
        wolfssl_ref: [ 'master', 'v5.8.0-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]

  # This job builds tcpdump and runs its tests with wolfProvider.
  test_tcpdump:
    runs-on: ubuntu-22.04 # Specifies the runner environment (Ubuntu 22.04 VM).
    needs: build_wolfprovider # Ensures the crypto dependencies are built first.
    timeout-minutes: 15 # Sets a maximum time limit for the job.
    strategy:
      matrix:
        wolfssl_ref: [ 'master', 'v5.8.0-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]
        force_fail: [ 'WOLFPROV_FORCE_FAIL=1', '' ] # Matrix for testing normal pass and forced fail.

    steps:
      - name: Checkout Workflow Repository # Downloads your current repository containing this workflow and scripts.
        uses: actions/checkout@v4

      - name: Retrieve OpenSSL from cache # Restores OpenSSL build artifacts from the cache.
        uses: actions/cache/restore@v4
        id: openssl-cache
        with:
          path: |
            openssl-source
            openssl-install
          key: ossl-depends-${{ matrix.openssl_ref }}-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Retrieve wolfSSL/wolfProvider from cache # Restores wolfSSL and wolfProvider build artifacts from the cache.
        uses: actions/cache/restore@v4
        id: wolfprov-cache
        with:
          path: |
            wolfssl-source
            wolfssl-install
            wolfprov-install
            provider.conf
          key: wolfprov-${{ matrix.wolfssl_ref }}-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Install test dependencies # Downloads and installs required build tools for libpcap and tcpdump.
        run: |
          sudo apt-get update
          sudo apt-get install -y flex bison autoconf libtool

      - name: Checkout libpcap # Downloads the libpcap source code.
        uses: actions/checkout@v4
        with:
          repository: the-tcpdump-group/libpcap
          path: libpcap_repo

      - name: Build and install libpcap # Compiles and installs libpcap.
        working-directory: libpcap_repo
        run: |
          ./autogen.sh # Generates configuration scripts.
          ./configure --prefix=/usr/local # Configures for installation to /usr/local.
          make -j$(nproc) # Compiles using all available CPU cores.
          sudo make install # Installs libpcap system-wide.

      - name: Checkout tcpdump # Downloads the tcpdump source code.
        uses: actions/checkout@v4
        with:
          repository: the-tcpdump-group/tcpdump
          path: tcpdump_repo

      - name: Build and install tcpdump # Compiles and installs tcpdump.
        working-directory: tcpdump_repo
        run: |
          ./autogen.sh # Generates configuration scripts.
          # Configures tcpdump to use the installed libpcap.
          ./configure --prefix=/usr/local --with-pcap=/usr/local
          make -j$(nproc) # Compiles.
          sudo make install # Installs tcpdump system-wide.

      - name: Run tcpdump tests # Configures environment variables and executes tcpdump's test suite.
        working-directory: tcpdump_repo
        run: |
          # Sets library paths so OpenSSL can find wolfSSL and wolfProvider.
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/wolfssl-install/lib:\
                                  $GITHUB_WORKSPACE/openssl-install/lib:\
                                  $GITHUB_WORKSPACE/openssl-install/lib64:\
                                  $LD_LIBRARY_PATH
          # Specifies the OpenSSL configuration file for wolfProvider.
          export OPENSSL_CONF=$GITHUB_WORKSPACE/provider.conf
          # Points OpenSSL to the directory where wolfProvider module is installed.
          export OPENSSL_MODULES=$GITHUB_WORKSPACE/wolfprov-install/lib
          sudo ldconfig # Updates dynamic linker run-time bindings.

          # Applies the force_fail matrix variable to the environment.
          export ${{ matrix.force_fail }}

          # Runs tcpdump's 'make check' and captures its output.
          make check 2>&1 | tee tcpdump-test.log
          TEST_RESULT=$? # Stores the exit code of the test run.

          # Executes a custom script to evaluate the test result based on force_fail.
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} tcpdump
