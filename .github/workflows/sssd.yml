name: SSSD Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ '*' ]  # [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
      replace_default: ${{ matrix.replace_default }}
    strategy:
      matrix:
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]
        replace_default: [ true ]

  test_sssd:
    runs-on: ubuntu-22.04
    container:
      image: debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive
    needs: build_wolfprovider
    # This should be a safe limit for the tests to run.
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        sssd_ref: [ 'master', '2.9.1' ]
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]
        replace_default: [ true ]
        force_fail: ['WOLFPROV_FORCE_FAIL=1', '']
        exclude:
          - sssd_ref: 'master'
            force_fail: 'WOLFPROV_FORCE_FAIL=1'
    env:
      WOLFSSL_PACKAGES_PATH: /tmp/wolfssl-packages
      OPENSSL_PACKAGES_PATH: /tmp/openssl-packages
      WOLFPROV_PACKAGES_PATH: /tmp/wolfprov-packages
    steps:
      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checking OpenSSL/wolfProvider packages in cache
        uses: actions/cache/restore@v4
        id: wolfprov-cache
        with:
          path: |
            ${{ env.WOLFSSL_PACKAGES_PATH }}
            ${{ env.OPENSSL_PACKAGES_PATH }}
            ${{ env.WOLFPROV_PACKAGES_PATH }}
          key: openssl-wolfprov-debian-packages-${{ github.sha }}${{ matrix.replace_default && '-replace-default' || '' }}
          fail-on-cache-miss: true

      - name: Install wolfSSL/OpenSSL/wolfprov packages
        run: |
          printf "Installing OpenSSL/wolfProvider packages:\n"
          ls -la ${{ env.WOLFSSL_PACKAGES_PATH }}
          ls -la ${{ env.OPENSSL_PACKAGES_PATH }}
          ls -la ${{ env.WOLFPROV_PACKAGES_PATH }}

          apt install --reinstall -y \
            ${{ env.WOLFSSL_PACKAGES_PATH }}/libwolfssl_*.deb

          apt install --reinstall -y \
            ${{ env.OPENSSL_PACKAGES_PATH }}/openssl_*.deb \
            ${{ env.OPENSSL_PACKAGES_PATH }}/libssl3_*.deb \
            ${{ env.OPENSSL_PACKAGES_PATH }}/libssl-dev_*.deb

          apt install --reinstall -y \
            ${{ env.WOLFPROV_PACKAGES_PATH }}/libwolfprov_*.deb

      - name: Install dependencies
        run: |
          apt-get update
          # Install SSSD build dependencies from Debian package
          apt-get build-dep -y sssd || true
          # Install additional dependencies we need
          apt-get install -y build-essential autoconf automake libtool \
          gettext autopoint pkg-config libldb-dev libldb2 python3-ldb \
          bc libcap-dev libutf8proc-dev git libpopt-dev \
          libtalloc-dev libtdb-dev libtevent-dev libdhash-dev \
          libini-config-dev libcollection-dev libpath-utils-dev \
          libref-array-dev

      - name: Setup LDB header symlinks
        run: |
          ln -sf samba-4.0/ldb.h /usr/include/ldb.h
          ln -sf samba-4.0/ldb_errors.h /usr/include/ldb_errors.h
          ln -sf samba-4.0/ldb_handlers.h /usr/include/ldb_handlers.h
          ln -sf samba-4.0/ldb_module.h /usr/include/ldb_module.h
          ln -sf samba-4.0/ldb_version.h /usr/include/ldb_version.h

      - name: Checkout OSP
        uses: actions/checkout@v4
        with:
          repository: wolfssl/osp
          path: osp
          fetch-depth: 1

      - name: Build and test sssd with wolfProvider
        shell: bash
        run: |
          # Clone SSSD
          git clone https://github.com/SSSD/sssd.git
          cd sssd
          git checkout ${{ matrix.sssd_ref }}
          # Apply patch for testing
          patch -p1 < $GITHUB_WORKSPACE/osp/wolfProvider/sssd/sssd-${{ matrix.sssd_ref }}-wolfprov.patch
          # Configure and build SSSD with wolfProvider
          autoreconf -ivf
          ./configure --without-samba --disable-cifs-idmap-plugin \
          --without-nfsv4-idmapd-plugin --with-oidc-child=no
          make -j

      - name: Run tests
        working-directory: sssd
        shell: bash
        run: |
          export ${{ matrix.force_fail }}

          echo "Checking OpenSSL providers:"
          openssl list -providers | tee provider-list.log

          # Check if wolfProvider is loaded
          if grep -q "wolfSSL Provider\|libwolfprov" provider-list.log; then
            echo "SUCCESS: wolfProvider found in OpenSSL providers"
          else
            echo "ERROR: wolfProvider not found in OpenSSL providers"
            echo "Available providers:"
            cat provider-list.log
            echo "Environment variables:"
            env | grep -E "(OPENSSL|WOLFSSL|LD_LIBRARY)"
            exit 1
          fi

          # If force fail is enabled dont exit with error
          if [ "${{ matrix.force_fail }}" == "WOLFPROV_FORCE_FAIL=1" ]; then
            set +e
          fi
          # Run tests and save result
          make check 2>&1 | tee sssd-test.log
          TEST_RESULT=${PIPESTATUS[0]}
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} sssd






