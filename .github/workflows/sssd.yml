name: SSSD Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ '*' ]  # [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  test_sssd:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    container:
      image: quay.io/sssd/ci-client-devel:ubuntu-latest
      env:
        LD_LIBRARY_PATH: /usr/local/lib:/github/home/wolfssl-install/lib:/github/home/openssl-install/lib64
        DEBIAN_FRONTEND: noninteractive
    strategy:
      fail-fast: false
      matrix:
        sssd_ref: [ 'master', '2.9.1' ]
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]
        force_fail: ['WOLFPROV_FORCE_FAIL=1', '']
        exclude:
          - sssd_ref: 'master'
            force_fail: 'WOLFPROV_FORCE_FAIL=1'
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y build-essential autoconf libldb-dev \
          libldb2 python3-ldb bc libcap-dev libutf8proc-dev git

      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Check if this version of wolfssl/wolfprovider has already been built,
      # mark to cache these items on post if we do end up building
      - name: Checking wolfSSL/wolfProvider in cache
        uses: actions/cache@v4
        id: wolfprov-cache
        with:
          path: |
            wolfssl-install
            wolfprov-install
            openssl-install/lib64
            openssl-install/include
            openssl-install/bin
          key: wolfprov-${{ matrix.wolfssl_ref }}-${{ matrix.openssl_ref }}-${{ github.sha }}
          lookup-only: true

      # If not yet built this version, build it now
      - name: Build wolfProvider
        if: steps.wolfprov-cache.outputs.cache-hit != 'true'
        run: |
          OPENSSL_TAG=${{ matrix.openssl_ref }} WOLFSSL_TAG=${{ matrix.wolfssl_ref }} ./scripts/build-wolfprovider.sh

      - name: Setup wolfProvider environment
        shell: bash
        run: |
          source $GITHUB_WORKSPACE/scripts/env-setup
          # CRITICAL FIX: Ensure custom OpenSSL binary and libraries are used
          export PATH="$GITHUB_WORKSPACE/openssl-install/bin:$PATH"
          export LD_LIBRARY_PATH="$GITHUB_WORKSPACE/openssl-install/lib64:$GITHUB_WORKSPACE/wolfssl-install/lib:$LD_LIBRARY_PATH"
          echo "Checking if wolfProvider is loaded:"
          openssl list -providers
          echo "Testing wolfProvider functionality:"
          openssl version

      - name: Setup env
        run: |
          ln -s samba-4.0/ldb.h /usr/include/ldb.h
          ln -s samba-4.0/ldb_errors.h /usr/include/ldb_errors.h
          ln -s samba-4.0/ldb_handlers.h /usr/include/ldb_handlers.h
          ln -s samba-4.0/ldb_module.h /usr/include/ldb_module.h
          ln -s samba-4.0/ldb_version.h /usr/include/ldb_version.h

      - name: Checkout OSP
        uses: actions/checkout@v4
        with:
          repository: wolfssl/osp
          path: osp
          fetch-depth: 1


      - name: Build and test sssd with wolfProvider
        shell: bash
        run: |
          source $GITHUB_WORKSPACE/scripts/env-setup
          # CRITICAL FIX: Ensure custom OpenSSL binary and libraries are used
          export PATH="$GITHUB_WORKSPACE/openssl-install/bin:$PATH"
          export LD_LIBRARY_PATH="$GITHUB_WORKSPACE/openssl-install/lib64:$GITHUB_WORKSPACE/wolfssl-install/lib:$LD_LIBRARY_PATH"

          git clone https://github.com/SSSD/sssd.git
          cd sssd
          git checkout ${{ matrix.sssd_ref }}
          patch -p1 < $GITHUB_WORKSPACE/osp/wolfProvider/sssd/sssd-${{ matrix.sssd_ref }}-wolfprov.patch
          autoreconf -ivf
          ./configure --without-samba --disable-cifs-idmap-plugin \
          --without-nfsv4-idmapd-plugin --with-oidc-child=no

          make -j

      - name: Run tests
        working-directory: sssd
        shell: bash
        run: |
          source $GITHUB_WORKSPACE/scripts/env-setup
          # CRITICAL FIX: Ensure custom OpenSSL binary and libraries are used
          export PATH="$GITHUB_WORKSPACE/openssl-install/bin:$PATH"
          export LD_LIBRARY_PATH="$GITHUB_WORKSPACE/openssl-install/lib64:$GITHUB_WORKSPACE/wolfssl-install/lib:$LD_LIBRARY_PATH"
          export ${{ matrix.force_fail }}

          openssl list -providers | tee provider-list.log

          if grep -q "wolfSSL Provider\|libwolfprov" provider-list.log; then
            echo "SUCCESS: wolfProvider found in OpenSSL providers"
          else
            echo "ERROR: wolfProvider not found in OpenSSL providers"
            cat provider-list.log
            env | grep -E "(OPENSSL|WOLFSSL|LD_LIBRARY)"
            exit 1
          fi

          if [ "${{ matrix.force_fail }}" == "WOLFPROV_FORCE_FAIL=1" ]; then
            set +e
          fi
          make check 2>&1 | tee sssd-test.log
          TEST_RESULT=${PIPESTATUS[0]}
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} sssd

